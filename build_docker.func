#!/bin/bash

function docker_build() {
    prefix_image_name=$1
    base_image=$2
    log_dir=$3
    dockerfile=$4
    interactive=$5
    container_name=$6

    build_log=${log_dir}/build.log
    rm -f ${build_log} &> /dev/null

    # build container
    if [ $interactive -ne 0 ]; then
        docker login &> /dev/null
    fi
    printf "\n--> Building container ...\n" > ${build_log}
    #cd ${dockerfile}

    set -o pipefail &> /dev/null
    docker build  --build-arg base_image=${base_image} -t ${prefix_image_name}/hccl_demo:${container_name} . &>> ${build_log} ; ext_code=$? &> /dev/null
    set +o pipefail &> /dev/null

    if [ $ext_code -ne 0 ]; then
        printf "\n--> Docker build failed, exitting...\n" | tee -a ${build_log}
        exit 1
    fi
    printf "\n--> Container built successfully ...\n\n" >>  ${build_log}
}

function docker_push() {
    prefix_image_name=$1
    log_dir=$2
    container_name=$3

    # validate logged in  ...         docker login &> /dev/null

    push_log=${log_dir}/$(hostname)_push.log
    rm -f ${push_log} &> /dev/null
    printf "\n--> Pushing container ...\n" > ${push_log}

    set -o pipefail &> /dev/null
    docker push ${prefix_image_name}/hccl_demo:${container_name} &>> ${push_log} ; ext_code=$? &> /dev/null
    set +o pipefail &> /dev/null

    if [ $ext_code -ne 0 ]; then
        printf "\n--> Docker push fail, exitting...\n" | tee -a ${push_log}
        exit 1
    fi
    printf "\n--> Container pushed successfully ...\n\n" >>  ${push_log}
}
